# SPRING: DATASOURCE  
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url= jdbc:mysql://${db.url}:${db.port}/${db.name}
spring.datasource.username= ${db.username}
spring.datasource.password= ${db.password}
# SPRING: JPA
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.show_sql= true
spring.jpa.properties.hibernate.format_sql= true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# HIKARI: CONNECTION POOL
spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider
## https://github.com/brettwooldridge/HikariCP/wiki/MySQL-Configuration
spring.datasource.hikari.poolName=DBPool
spring.datasource.hikari.cachePrepStmts= true
spring.datasource.hikari.prepStmtCacheSize=250
spring.datasource.hikari.prepStmtCacheSqlLimit= 2048
spring.datasource.hikari.useServerPrepStmts= true
spring.datasource.hikari.useLocalSessionState=true
spring.datasource.hikari.rewriteBatchedStatements=true
spring.datasource.hikari.cacheResultSetMetadata=true
spring.datasource.hikari.cacheServerConfiguration=true
spring.datasource.hikari.elideSetAutoCommits=true
spring.datasource.hikari.maintainTimeStats=false

spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.autoReconnect=true
# [minimum-idle] the minimum number of idle connections that HikariCP tries to maintain in the pool.  
spring.datasource.hikari.minimum-idle=2
# [maximum-pool-size] the maximum size that the pool is allowed to reach, including both idle and in-use connections.
spring.datasource.hikari.maximum-pool-size=7
# [idle-timeout] the maximum amount of time that a connection is allowed to sit idle in the pool.
spring.datasource.hikari.idle-timeout=20000
# [max-lifetime, should be less that wait-timeout of database server] maximum lifetime of a connection in the pool.
spring.datasource.hikari.max-lifetime=25000
# [connection-timeout] the maximum number of milliseconds that a client will wait for a connection from the pool.
spring.datasource.hikari.connection-timeout=30000
# [leakDetectionThreshold] the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak.
spring.datasource.hikari.leakDetectionThreshold=30000

